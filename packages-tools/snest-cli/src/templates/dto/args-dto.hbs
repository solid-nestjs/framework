{{#if hasValidation}}
import { IsOptional, IsString, IsNumber, IsBoolean } from 'class-validator';
{{/if}}
{{#if hasSwagger}}
import { ApiProperty } from '@nestjs/swagger';
{{/if}}
{{#if hasGraphQL}}
import { ArgsType, Field } from '@nestjs/graphql';
{{/if}}

{{#if hasGraphQL}}
@ArgsType()
{{/if}}
export class Find{{pascalCase name}}Args {
  {{#if hasSwagger}}
  @ApiProperty({ description: 'Page number for pagination', required: false })
  {{/if}}
  {{#if hasGraphQL}}
  @Field({ nullable: true })
  {{/if}}
  {{#if hasValidation}}
  @IsOptional()
  @IsNumber()
  {{/if}}
  page?: number;

  {{#if hasSwagger}}
  @ApiProperty({ description: 'Number of items per page', required: false })
  {{/if}}
  {{#if hasGraphQL}}
  @Field({ nullable: true })
  {{/if}}
  {{#if hasValidation}}
  @IsOptional()
  @IsNumber()
  {{/if}}
  limit?: number;

  {{#if hasSwagger}}
  @ApiProperty({ description: 'Search term', required: false })
  {{/if}}
  {{#if hasGraphQL}}
  @Field({ nullable: true })
  {{/if}}
  {{#if hasValidation}}
  @IsOptional()
  @IsString()
  {{/if}}
  search?: string;

  {{#if hasSwagger}}
  @ApiProperty({ description: 'Sort by field', required: false })
  {{/if}}
  {{#if hasGraphQL}}
  @Field({ nullable: true })
  {{/if}}
  {{#if hasValidation}}
  @IsOptional()
  @IsString()
  {{/if}}
  sortBy?: string;

  {{#if hasSwagger}}
  @ApiProperty({ description: 'Sort order', required: false, enum: ['ASC', 'DESC'] })
  {{/if}}
  {{#if hasGraphQL}}
  @Field({ nullable: true })
  {{/if}}
  {{#if hasValidation}}
  @IsOptional()
  @IsString()
  {{/if}}
  sortOrder?: 'ASC' | 'DESC';
}